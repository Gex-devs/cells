## WARNING: 
# To build a multiplatform image from this docker file, you must
# - have qemu enabled on the build machine
# - use docker v24+
# - Enable Dockerâ€™s containerd image store instead of the classic store
# - Use a docker-container Buildx builder (with emulation)

# You can then build the image with:
# DOCKER_BUILDKIT=1 docker buildx build . --platform linux/arm64,linux/amd64 --build-arg version=${VERSION} --output type=docker,name=pydio/cells-convert-tools:${VERSION},push=false

# Handle certificates and download in a distinct stage to reduce image size
FROM alpine AS certs
ARG version

# builtin args
ARG TARGETPLATFORM   # e.g. "linux/arm64"
ARG TARGETARCH        # e.g. "arm64" or "amd64"
ARG arch=$TARGETARCH

RUN apk update && apk add ca-certificates

WORKDIR /pydio
RUN wget "https://download.pydio.com/pub/cells/release/${version}/linux-${arch}/cells"
RUN wget --output-document=jq "https://download.pydio.com/pub/linux/tools/jq-linux-${arch}"
RUN chmod +x /pydio/cells /pydio/jq 

# Create the target image
FROM busybox
ARG version

# Add necessary files
COPY docker-entrypoint.sh /opt/pydio/bin/docker-entrypoint.sh
COPY --from=certs /pydio/jq /bin/jq
COPY --from=certs /etc/ssl/certs /etc/ssl/certs
COPY --from=certs /pydio/cells /opt/pydio/bin/cells

ENV CADDYPATH=/var/cells/certs 
ENV CELLS_WORKING_DIR=/var/cells
WORKDIR $CELLS_WORKING_DIR

# Final configuration
RUN ln -s /opt/pydio/bin/cells /bin/cells \
    && ln -s /opt/pydio/bin/docker-entrypoint.sh /bin/docker-entrypoint.sh \
    && chmod +x /opt/pydio/bin/docker-entrypoint.sh \
    && echo "Pydio Cells Home Docker Image" > /opt/pydio/package.info \
    && echo "  A ready-to-go Docker image based on BusyBox ${arch} to configure and launch Cells in no time." >> /opt/pydio/package.info \
    && echo "  Generated on $(date) with docker build script from version ${version:-nightly}" >> /opt/pydio/package.info

ENTRYPOINT ["docker-entrypoint.sh"]
CMD ["cells", "start"]
